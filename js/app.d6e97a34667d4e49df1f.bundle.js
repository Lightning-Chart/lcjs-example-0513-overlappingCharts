(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,n)=>{const o=n(377),{AxisScrollStrategies:r,emptyFill:s,lightningChart:l,isImageFill:i,SolidFill:a,ColorRGBA:c,Themes:h}=o,d=document.getElementById("chart")||document.body;d===document.body&&(d.style.width="100vw",d.style.height="max(100vh, 100%)",d.style.margin="0px"),d.style.overflowX="hidden";const p=l({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}),g=d,y=[],u=e=>{const t=document.createElement("div");switch(g.append(t),e){case"lightningchart":{const n=p.ChartXY({container:t,theme:h[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setCursorMode("show-nearest").setTitleEffect(!1).setSeriesBackgroundEffect(!1);n.axisX.setScrollStrategy(r.progressive).setDefaultInterval((e=>({end:e.dataMax??0,start:(e.dataMax??0)-1e4,stopAxisAfter:!1})));const o=n.addPointLineAreaSeries({dataPattern:"ProgressiveX"}).setMaxSampleCount(1e5).setAreaFillStyle(s).setStrokeStyle((e=>e.setThickness(1))).setEffect(!1);y.push({type:e,container:t,chart:n,series:o}),i(n.engine.getBackgroundFillStyle())&&n.engine.setBackgroundFillStyle(new a({color:c(0,0,0)}));break}default:{const e=document.createElement("canvas");t.append(e),e.style.width="100%",e.style.height="100%";const n=e.getContext("2d");n.fillStyle="blue",n.fillRect(50,50,100,100),n.beginPath(),n.arc(250,100,50,0,2*Math.PI),n.fillStyle="red",n.fill(),n.closePath(),n.beginPath(),n.moveTo(25,100),n.lineTo(225,100),n.strokeStyle="green",n.lineWidth=5,n.stroke(),n.closePath(),y.push({type:"other",container:t});break}}return t.style.position="absolute",t.style.boxSizing="content-box",t.style.width=g.getBoundingClientRect().width/4+"px",t.style.left=y.length%4*(g.getBoundingClientRect().width/4)+"px",t.style.height="200px",t.style.top=200*Math.floor(y.length/4)+"px",t.addEventListener("pointerdown",(e=>{if(e.defaultPrevented)return;t.style.pointerEvents="none",y.forEach((e=>"lightningchart"===e.type&&e.chart.setCursorMode(void 0))),g.append(t);let n=e;const o=e=>{const o=e.clientX-n.clientX,r=e.clientY-n.clientY;t.style.left=`${Number.parseFloat(t.style.left.replace("px",""))+o}px`,t.style.top=`${Number.parseFloat(t.style.top.replace("px",""))+r}px`,n=e},r=e=>{t.style.pointerEvents="unset",y.forEach((e=>"lightningchart"===e.type&&e.chart.setCursorMode("show-nearest"))),window.removeEventListener("pointermove",o),window.removeEventListener("pointerup",r)};window.addEventListener("pointermove",o),window.addEventListener("pointerup",r)})),y[y.length-1]};for(let e=0;e<20;e+=1)u("lightningchart");u("other");const m=y.find((e=>"lightningchart"===e.type)).chart.getTheme().isDark;y.forEach((e=>{e.container.style.border="solid 1px "+(m?"white":"black"),e.container.style.backgroundColor=m?"rgb(40,40,40)":"rgb(255,255,255)"})),y[y.length-2].container.style.left="130px",y[y.length-2].container.style.top="340px",y[y.length-1].container.style.left="300px",y[y.length-1].container.style.top="490px",y[6].container.style.left="410px",y[6].container.style.top="370px",g.append(y[6].container),setInterval((()=>{const e={x:performance.now(),y:Math.random()};y.forEach((t=>{"lightningchart"===t.type&&(t.series?t.series.appendSample(e):t.pointSeriesList&&t.pointSeriesList[Math.round(Math.random()*(t.pointSeriesList.length-1))].appendSample(e))}))}),1e3/60)}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);